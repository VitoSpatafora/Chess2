-edit move ordering to implement a min heap of the top n moves
  -during the loop through all the moves, if heap is not full or the current move has a higher score than the lowest move in heap, pop the move in the list and add it back into unsorted list (idk if you can edit while iterating... might cause issues)(maybe use a seperate list for unsorted moves to keep it clean), then add current move to the heap
  -Once out of the loop, insert moves from the heap into the sorted list by looping downward starting at index[n-1] or index[n] depending on if there is a TT move at index 0
  -finish ordered moves list by adding in the rest of the unsorted moves


-Add magic bitboards to sliding piece logic



add premove to UI


g++ -O3 -Wall -shared -std=c++17 -fPIC -DDEBUG_BOARD `python3 -m pybind11 --includes` binding.cpp -o chesscore`python3-config --extension-suffix`


eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
